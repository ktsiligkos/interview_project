version: "3.9"

services:
  api:
    image: xm-project-api:latest
    build:
      context: .
      args:
        GO_VERSION: "1.22"
    environment:
      HTTP_PORT: "${HTTP_PORT:-8081}"
      HTTP_ADDR: ":${HTTP_PORT:-8081}"
      MYSQL_USER: "${MYSQL_USER:-xm}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-xmpass}"
      MYSQL_DATABASE: "xm_companiesÃŸ"
      MYSQL_HOST: "mysql"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
      MYSQL_DSN: "${MYSQL_USER:-xm}:${MYSQL_PASSWORD:-xmpass}@tcp(mysql:${MYSQL_PORT:-3306})/${MYSQL_DATABASE:-xm_companies}"
      JWT_SECRET: "${JWT_SECRET:-secret1234}"
      KAFKA_BROKERS: "${KAFKA_BROKERS:-kafka:9092}"
      KAFKA_TOPIC: "${KAFKA_TOPIC:-company-events}"
    ports:
      - "${HTTP_PORT_HOST:-8081}:${HTTP_PORT:-8081}"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_healthy
  mysql:
    image: mysql:8.0.41
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-rootpass}"
      MYSQL_DATABASE: "xm_companies"
      MYSQL_USER: "${MYSQL_USER:-xm}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-xmpass}"
      MYSQL_PORT: "${MYSQL_PORT:-3306}"
    ports:
      - "${MYSQL_PORT_HOST:-3307}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/mysql:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_PASSWORD:-xmpass}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    ports:
      - "9094:9094"
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:9094,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
    restart: unless-stopped
  kafka-init:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka-init
    depends_on:
      kafka:
        condition: service_healthy
    restart: "no"
    entrypoint: >
        bash -c '
        echo "Creating topic company-events..." ;
        for i in $(seq 1 60); do
          kafka-topics --create --if-not-exists \
            --topic company-events \
            --partitions 1 \
            --replication-factor 1 \
            --bootstrap-server kafka:9092 && break || {
              echo "Broker not ready yet (attempt $i). Retrying in 2s...";
              sleep 2;
            }
        done ;
        echo "Done."
        '  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "${KAFKA_UI_PORT_HOST:-8080}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_PROPERTIES_DEFAULT_API_TIMEOUT_MS: "60000"
      KAFKA_CLUSTERS_0_PROPERTIES_REQUEST_TIMEOUT_MS: "60000"
volumes:
  mysql-data:
